{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyPleVsofg78U2/w430jUAI2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","source":["import numpy as np\n","import tensorflow as tf\n","from tensorflow.keras.datasets import mnist  # Replace with the new dataset\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense\n","from tensorflow.keras.utils import to_categorical\n","\n","# Load the new dataset (e.g., MNIST)\n","(x_train, y_train), (x_test, y_test) = mnist.load_data()  # Replace with the new dataset\n","\n","x_train = x_train.astype('float32') / 255.0\n","x_test = x_test.astype('float32') / 255.0\n","\n","# One-hot encode the labels for the new dataset\n","num_classes = 10  # Replace with the number of classes in the new dataset\n","y_train = to_categorical(y_train, num_classes=num_classes)\n","y_test = to_categorical(y_test, num_classes=num_classes)\n","\n","model = Sequential()\n","\n","model.add(Conv2D(32, (3, 3), activation='relu', padding='same', input_shape=(28, 28, 1)))  # Adjust input shape if needed\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Conv2D(64, (3, 3), activation='relu', padding='same'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","\n","model.add(Flatten())\n","\n","model.add(Dense(128, activation='relu'))\n","model.add(Dense(num_classes, activation='softmax'))  # Adjust the number of output units\n","\n","model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","\n","model.fit(x_train, y_train, validation_data=(x_test, y_test), epochs=10, batch_size=32)\n","\n","loss, accuracy = model.evaluate(x_test, y_test)\n","print(f\"Test accuracy: {accuracy*100:.2f}%\")"],"metadata":{"id":"rsO6PV5H0g7z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1701088831829,"user_tz":-330,"elapsed":101756,"user":{"displayName":"21ai016 Jagadeeswaran V P","userId":"06313423288146334397"}},"outputId":"6474b938-ac50-4bfb-8368-962440ee1d06"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11490434/11490434 [==============================] - 0s 0us/step\n","Epoch 1/10\n","1875/1875 [==============================] - 20s 5ms/step - loss: 0.1205 - accuracy: 0.9628 - val_loss: 0.0400 - val_accuracy: 0.9876\n","Epoch 2/10\n","1875/1875 [==============================] - 8s 4ms/step - loss: 0.0405 - accuracy: 0.9877 - val_loss: 0.0331 - val_accuracy: 0.9894\n","Epoch 3/10\n","1875/1875 [==============================] - 8s 4ms/step - loss: 0.0282 - accuracy: 0.9909 - val_loss: 0.0358 - val_accuracy: 0.9892\n","Epoch 4/10\n","1875/1875 [==============================] - 9s 5ms/step - loss: 0.0194 - accuracy: 0.9936 - val_loss: 0.0372 - val_accuracy: 0.9879\n","Epoch 5/10\n","1875/1875 [==============================] - 8s 4ms/step - loss: 0.0157 - accuracy: 0.9951 - val_loss: 0.0419 - val_accuracy: 0.9871\n","Epoch 6/10\n","1875/1875 [==============================] - 9s 5ms/step - loss: 0.0109 - accuracy: 0.9965 - val_loss: 0.0324 - val_accuracy: 0.9912\n","Epoch 7/10\n","1875/1875 [==============================] - 8s 4ms/step - loss: 0.0088 - accuracy: 0.9970 - val_loss: 0.0338 - val_accuracy: 0.9919\n","Epoch 8/10\n","1875/1875 [==============================] - 8s 4ms/step - loss: 0.0081 - accuracy: 0.9974 - val_loss: 0.0386 - val_accuracy: 0.9918\n","Epoch 9/10\n","1875/1875 [==============================] - 9s 5ms/step - loss: 0.0073 - accuracy: 0.9975 - val_loss: 0.0444 - val_accuracy: 0.9905\n","Epoch 10/10\n","1875/1875 [==============================] - 7s 4ms/step - loss: 0.0057 - accuracy: 0.9980 - val_loss: 0.0430 - val_accuracy: 0.9905\n","313/313 [==============================] - 1s 3ms/step - loss: 0.0430 - accuracy: 0.9905\n","Test accuracy: 99.05%\n"]}]},{"cell_type":"code","source":["print(f\"Test Loss: {loss*100:.2f}%\")"],"metadata":{"id":"NRRnwa9q6dE1"},"execution_count":null,"outputs":[]}]}